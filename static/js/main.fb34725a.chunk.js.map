{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","onFormSubmit","preventDefault","handleSubmit","state","initialState","onSubmit","type","onChange","App","characters","character","filter","i","className","ReactDOM","render","document","getElementById"],"mappings":"0SAEMA,G,MAAc,WAClB,OACE,+BACE,4BACE,oCACA,mCACA,0CAMFC,EAAY,SAAAC,GAChB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAKR,OAAO,+BAAQJ,IAgBFU,E,iLAZH,IAAD,EACoCC,KAAKZ,MAAxCE,EADD,EACCA,cAAeQ,EADhB,EACgBA,gBAEvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,S,GAP9CG,a,OC0BLC,E,YApDb,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KAURe,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBV,EADc,EACdA,KAAMW,EADQ,EACRA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,KAfO,EAmBnBE,aAAe,SAACJ,GACdA,EAAMK,iBAEN,EAAKrB,MAAMsB,aAAa,EAAKC,OAC7B,EAAKJ,SAAS,EAAKK,eApBnB,EAAKA,aAAe,CAClBjB,KAAM,GACNC,IAAK,IAGP,EAAKe,MAAQ,EAAKC,aARD,E,sEA0BT,IAAD,EACeZ,KAAKW,MAAnBhB,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,0BAAMiB,SAAUb,KAAKQ,cACnB,uCACA,2BACEM,KAAK,OACLnB,KAAK,OACLW,MAAOX,EACPoB,SAAUf,KAAKG,eACjB,sCACA,2BACEW,KAAK,OACLnB,KAAK,MACLW,MAAOV,EACPmB,SAAUf,KAAKG,eACjB,4BAAQW,KAAK,UAAb,e,GA5CWb,aCkCJe,E,2MA9BbL,MAAQ,CACNM,WAAY,I,EAGdP,aAAe,SAAAQ,GACb,EAAKX,SAAS,CAACU,WAAW,GAAD,mBAAM,EAAKN,MAAMM,YAAjB,CAA6BC,O,EAGxDpB,gBAAkB,SAAAL,GAAU,IAClBwB,EAAe,EAAKN,MAApBM,WAER,EAAKV,SAAS,CACZU,WAAYA,EAAWE,QAAO,SAACD,EAAWE,GACxC,OAAOA,IAAM3B,Q,wEAKT,IACAwB,EAAejB,KAAKW,MAApBM,WAER,OACE,yBAAKI,UAAU,aACb,kBAAC,EAAD,CAAO/B,cAAe2B,EAAYnB,gBAAiBE,KAAKF,kBACxD,kBAAC,EAAD,CAAMY,aAAcV,KAAKU,oB,GAzBfT,a,MCAlBqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fb34725a.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Remove</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = props => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n      </td>\n      </tr>\n    )\n  })\n  return <tbody>{rows}</tbody>\n}\n\nclass Table extends Component {\n  render() {\n    const { characterData, removeCharacter } = this.props\n\n    return (      \n      <table>\n        <TableHeader />\n        <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\n      </table>\n    )\n  }\n}\n\nexport default Table","import React, { Component } from 'react'\n\nclass Form extends Component {\n  constructor(props) {\n    super(props)\n\n    this.initialState = {\n      name: '',\n      job: '',\n    }\n\n    this.state = this.initialState\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    \n    this.props.handleSubmit(this.state)\n    this.setState(this.initialState)\n  }\n\n  render() {\n    const { name, job } = this.state\n  \n    return (\n      <form onSubmit={this.onFormSubmit}>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}/>\n        <label>Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          value={job}\n          onChange={this.handleChange}/>\n        <button type=\"submit\">\n          Submit\n        </button>\n      </form>\n    )\n  }\n}\n\n\nexport default Form","import React, {Component} from 'react'\nimport './App.css';\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n  state = {\n    characters: []\n  }\n  \n  handleSubmit = character => {\n    this.setState({characters: [...this.state.characters, character]})\n  }\n\n  removeCharacter = index => {\n    const { characters } = this.state\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      })\n    })\n  }\n\n  render() {\n    const { characters } = this.state\n\n    return (\n      <div className=\"container\">\n        <Table characterData={characters} removeCharacter={this.removeCharacter}/>\n        <Form handleSubmit={this.handleSubmit}/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}